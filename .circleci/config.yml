version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  #android: circleci/android@2.1.2
  #node: circleci/node@5.0.2
  #docker: circleci/docker@2.2.0
  ruby: circleci/ruby@2.0.0
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
references:

  # Docker Image Configs
  config_android: &config_android
    working_directory: ~/Modulization
    docker:
      - image: cimg/android:2021.08.1
    resource_class: large
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      JVM_OPTS: -Xmx3048m
      GRADLE_OPTS: -Xmx3048m -Dkotlin.compiler.execution.strategy=in-process -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError
      TERM: dumb

  # ---------------------------------------------------------------------------------------------------------------------
  # CACHE GRADLE
  # ---------------------------------------------------------------------------------------------------------------------
  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}

  save_gradle_cache: &save_gradle_cache
    save_cache:
      paths:
        - ~/.gradle
        - ~/.m2
      key: jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}

  # ---------------------------------------------------------------------------------------------------------------------
  # CACHE RUBY FOR FASTLANE
  # ---------------------------------------------------------------------------------------------------------------------
  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: gems-{{ checksum "fastlane/release_notes.txt" }}

  save_gems_cache: &save_gems_cache
    save_cache:
      paths:
        - vendor/bundle
      key: gems-{{ checksum "fastlane/release_notes.txt" }}

  create_keystore_properties: &create_keystore_properties
    run:
      name: Create keystore.properties
      command: printf 'stagingKeyAlias=%s\nstagingKeyPassword=%s\nstagingStoreFile=%s\nstagingStorePassword=%s' \
        $STAGING_KEY_ALIAS $STAGING_KEY_PASSWORD $STAGING_STORE_FILE $STAGING_STORE_PASSWORD > keystore.properties


jobs:
  staging_distribution:
    <<: *config_android
    steps:
      - checkout
      - run: sudo chmod +x ./gradlew
      #- run: ./gradlew androidDependencies
      - run: yes | sdkmanager --licenses || exit 0
      - run: yes | sdkmanager --update || exit 0
      - run: yes | sdkmanager "platforms;android-33" || exit 0
      - *restore_gradle_cache
      - *restore_gems_cache
      - ruby/install:
          version: '3.0.1'
      - run: bundle install
      - run: bundle clean --force
      - run: bundle update fastlane
      - *save_gradle_cache
      - *save_gems_cache
      - *create_keystore_properties
      - run:
          name: Run instrumentation tests in Firebase Test Lab
          command: bundle exec fastlane buildOnToCircleCI firebase_app_id:$FIREBASE_APP_ID firebase_token:$FIREBASE_TOKEN

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2
  workflow:
    jobs:
      - SUBMIT_STAGING:
          type: approval # requires that an in-app button be clicked by an appropriate member of the project to continue.
          filters:
            branches:
              only:
                - /feature\/.*/
                - /release.*/
                - staging
                - develop
                - /fix\/.*/
                - master
      - staging_distribution:
          requires:
            - SUBMIT_STAGING
