# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
# For a detailed guide to building and testing on Android, read the docs:
# https://circleci.com/docs/2.0/language-android/ for more details.
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  android: circleci/android@1.0.3

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
references:
  # Workspaces represent the spaces we work on & are useful for sharing data between jobs.
  # Create a workspace with the ~/code directory.
  workspace:
    - &workspace ~/Modulization
    # Docker Image Configs
  android_config: &android_config
      working_directory: *workspace
      docker:
        - image: circleci/android:api-27
      resource_class: xlarge
      environment:
        TZ: "Asia/Ho_Chi_Minh"
        # Customize the JVM maximum heap limit
        JVM_OPTS: -Xmx3048m
        GRADLE_OPTS: -Xmx3048m -Dkotlin.compiler.execution.strategy=in-process -XX:MaxMetaspaceSize=256m -XX:+HeapDumpOnOutOfMemoryError
        TERM: dumb
  # ---------------------------------------------------------------------------------------------------------------------
  # CACHE RUBY FOR FASTLANE
  # ---------------------------------------------------------------------------------------------------------------------
  restore_gems_cache: &restore_gems_cache
    restore_cache:
      key: gems-{{ checksum "fastlane/release_notes.txt" }}

  save_gems_cache: &save_gems_cache
    save_cache:
      paths:
        - vendor/bundle
      key: gems-{{ checksum "fastlane/release_notes.txt" }}

  ruby_dependencies: &ruby_dependencies
    run:
      name: Download Ruby Dependencies
      command: |
        gem install bundler
        bundle check || bundle update --system || bundle install --path vendor/bundle

  # ---------------------------------------------------------------------------------------------------------------------
  # CACHE GRADLE
  # ---------------------------------------------------------------------------------------------------------------------
  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}

  save_gradle_cache: &save_gradle_cache
    save_cache:
      paths:
        - ~/.gradle
        - ~/.m2
      key: jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle.kts" }}-{{ checksum "app/build.gradle.kts" }}

  # ---------------------------------------------------------------------------------------------------------------------
  # DOWNLOAD ANDROID DEPENDENCIES
  # ---------------------------------------------------------------------------------------------------------------------
  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command: ./gradlew androidDependencies

  # ---------------------------------------------------------------------------------------------------------------------
  # DECODE FIREBASE SERVICE CREDENTIAL FILE AND WRITE IT TO A FILE
  # ---------------------------------------------------------------------------------------------------------------------
  decode_build_staging_credential: &decode_build_staging_credential
    run:
      name: Decode build staging credential
      command: |
        echo $BUILD_STAGING_CREDENTIAL | base64 -d | tee fastlane/modulization-e23e7-firebase-adminsdk-3cs4y-3d917176fb.json >/dev/null

  jobs:
    staging_distribution:
      <<: *android_config

      # Add steps to the job
      # See: https://circleci.com/docs/2.0/configuration-reference/#steps
      steps:
        # Checkout the code as the first step.
        - checkout
        - *restore_gradle_cache
        - *restore_gems_cache
        - *android_dependencies
        - run: bundle install
        - run: bundle clean --force
        - *ruby_dependencies
        - *save_gradle_cache
        - *save_gems_cache
        - *decode_build_staging_credential
        - run:
            name: Deploy latest Staging build to Firebase App Distribution
            command: bundle exec fastlane buildAndUploadToFirebaseDistribute
            no_output_timeout: 60m

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build_and_test:
    jobs:
      - staging_distribution
